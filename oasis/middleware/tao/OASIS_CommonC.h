// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.1.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:152

#ifndef _TAO_IDL_OASIS_COMMONC_WZMVIW_H_
#define _TAO_IDL_OASIS_COMMONC_WZMVIW_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "OASIS_Tao_stub_export.h"
#include "tao/ORB.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/Sequence_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 1 || TAO_BETA_VERSION != 2
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO OASIS_TAO_STUB_Export

// TAO_IDL - Generated from
// .\be\be_visitor_module\module_ch.cpp:38

namespace OASIS
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_exception\exception_ch.cpp:44

  class OASIS_TAO_STUB_Export DuplicateRegistration : public ::CORBA::UserException
  {
  public:

    DuplicateRegistration (void);
    DuplicateRegistration (const DuplicateRegistration &);
    ~DuplicateRegistration (void);

    DuplicateRegistration &operator= (const DuplicateRegistration &);

    static DuplicateRegistration *_downcast ( ::CORBA::Exception *);
    static const DuplicateRegistration *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_exception\exception_ch.cpp:44

  class OASIS_TAO_STUB_Export RegistrationFailed : public ::CORBA::UserException
  {
  public:

    RegistrationFailed (void);
    RegistrationFailed (const RegistrationFailed &);
    ~RegistrationFailed (void);

    RegistrationFailed &operator= (const RegistrationFailed &);

    static RegistrationFailed *_downcast ( ::CORBA::Exception *);
    static const RegistrationFailed *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_exception\exception_ch.cpp:44

  class OASIS_TAO_STUB_Export InvalidData : public ::CORBA::UserException
  {
  public:

    InvalidData (void);
    InvalidData (const InvalidData &);
    ~InvalidData (void);

    InvalidData &operator= (const InvalidData &);

    static InvalidData *_downcast ( ::CORBA::Exception *);
    static const InvalidData *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_exception\exception_ch.cpp:44

  class OASIS_TAO_STUB_Export InvalidFormat : public ::CORBA::UserException
  {
  public:

    InvalidFormat (void);
    InvalidFormat (const InvalidFormat &);
    ~InvalidFormat (void);

    InvalidFormat &operator= (const InvalidFormat &);

    static InvalidFormat *_downcast ( ::CORBA::Exception *);
    static const InvalidFormat *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_exception\exception_ch.cpp:44

  class OASIS_TAO_STUB_Export NilUUID : public ::CORBA::UserException
  {
  public:

    NilUUID (void);
    NilUUID (const NilUUID &);
    ~NilUUID (void);

    NilUUID &operator= (const NilUUID &);

    static NilUUID *_downcast ( ::CORBA::Exception *);
    static const NilUUID *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_exception\exception_ch.cpp:44

  class OASIS_TAO_STUB_Export NotFound : public ::CORBA::UserException
  {
  public:

    NotFound (void);
    NotFound (const NotFound &);
    ~NotFound (void);

    NotFound &operator= (const NotFound &);

    static NotFound *_downcast ( ::CORBA::Exception *);
    static const NotFound *_downcast ( ::CORBA::Exception const *);

    static ::CORBA::Exception *_alloc (void);

    virtual ::CORBA::Exception *_tao_duplicate (void) const;

    virtual void _raise (void) const;

    virtual void _tao_encode (TAO_OutputCDR &cdr) const;
    virtual void _tao_decode (TAO_InputCDR &cdr);
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_sequence\sequence_ch.cpp:102

#if !defined (_OASIS_CHARSTREAM_CH_)
#define _OASIS_CHARSTREAM_CH_

  class CharStream;

  typedef
    ::TAO_FixedSeq_Var_T<
        CharStream
      >
    CharStream_var;

  typedef
    ::TAO_Seq_Out_T<
        CharStream
      >
    CharStream_out;

  class OASIS_TAO_STUB_Export CharStream
    : public
        ::TAO::unbounded_value_sequence<
            ::CORBA::Char
          >
  {
  public:
    CharStream (void);
    CharStream ( ::CORBA::ULong max);
    CharStream (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Char* buffer,
      ::CORBA::Boolean release = false);
    CharStream (const CharStream &);
    virtual ~CharStream (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307

    
    typedef CharStream_var _var_type;
    typedef CharStream_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_visitor_sequence\sequence_ch.cpp:102

#if !defined (_OASIS_BINARYSTREAM_CH_)
#define _OASIS_BINARYSTREAM_CH_

  class BinaryStream;

  typedef
    ::TAO_FixedSeq_Var_T<
        BinaryStream
      >
    BinaryStream_var;

  typedef
    ::TAO_Seq_Out_T<
        BinaryStream
      >
    BinaryStream_out;

  class OASIS_TAO_STUB_Export BinaryStream
    : public
        ::TAO::unbounded_value_sequence<
            ::CORBA::Octet
          >
  {
  public:
    BinaryStream (void);
    BinaryStream ( ::CORBA::ULong max);
    BinaryStream (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Octet* buffer,
      ::CORBA::Boolean release = false);
    BinaryStream (const BinaryStream &);
    virtual ~BinaryStream (void);
    

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307

    
    typedef BinaryStream_var _var_type;
    typedef BinaryStream_out _out_type;

    

#if (TAO_NO_COPY_OCTET_SEQUENCES == 1)
    BinaryStream (
        ::CORBA::ULong length,
        const ACE_Message_Block* mb
      )
      : ::TAO::unbounded_value_sequence< ::CORBA::Octet> (length, mb) {}
#endif /* TAO_NO_COPY_OCTET_SEQUENCE == 1 */
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // .\be\be_type.cpp:261

  struct TimeStamp;

  typedef
    ::TAO_Fixed_Var_T<
        TimeStamp
      >
    TimeStamp_var;

  typedef
    TimeStamp &
    TimeStamp_out;

  // TAO_IDL - Generated from
  // .\be\be_visitor_structure\structure_ch.cpp:51

  struct OASIS_TAO_STUB_Export TimeStamp
  {

    // TAO_IDL - Generated from
    // .\be\be_type.cpp:307

    
    typedef TimeStamp_var _var_type;
    typedef TimeStamp_out _out_type;
    
    ::CORBA::ULong sec;
    ::CORBA::ULong usec;
  };

// TAO_IDL - Generated from
// .\be\be_visitor_module\module_ch.cpp:67

} // module OASIS

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::OASIS::CharStream>
    : public
        Var_Size_Arg_Traits_T<
            ::OASIS::CharStream,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::OASIS::BinaryStream>
    : public
        Var_Size_Arg_Traits_T<
            ::OASIS::BinaryStream,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // .\be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::OASIS::TimeStamp>
    : public
        Fixed_Size_Arg_Traits_T<
            ::OASIS::TimeStamp,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// .\be\be_visitor_exception\cdr_op_ch.cpp:40
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



OASIS_TAO_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OASIS::DuplicateRegistration &);
OASIS_TAO_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OASIS::DuplicateRegistration &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// .\be\be_visitor_exception\cdr_op_ch.cpp:40
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



OASIS_TAO_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OASIS::RegistrationFailed &);
OASIS_TAO_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OASIS::RegistrationFailed &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// .\be\be_visitor_exception\cdr_op_ch.cpp:40
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



OASIS_TAO_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OASIS::InvalidData &);
OASIS_TAO_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OASIS::InvalidData &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// .\be\be_visitor_exception\cdr_op_ch.cpp:40
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



OASIS_TAO_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OASIS::InvalidFormat &);
OASIS_TAO_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OASIS::InvalidFormat &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// .\be\be_visitor_exception\cdr_op_ch.cpp:40
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



OASIS_TAO_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OASIS::NilUUID &);
OASIS_TAO_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OASIS::NilUUID &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// .\be\be_visitor_exception\cdr_op_ch.cpp:40
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



OASIS_TAO_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OASIS::NotFound &);
OASIS_TAO_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OASIS::NotFound &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// .\be\be_visitor_sequence\cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_OASIS_CharStream_H_
#define _TAO_CDR_OP_OASIS_CharStream_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


OASIS_TAO_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OASIS::CharStream &_tao_sequence);
OASIS_TAO_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OASIS::CharStream &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_OASIS_CharStream_H_ */

// TAO_IDL - Generated from
// .\be\be_visitor_sequence\cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_OASIS_BinaryStream_H_
#define _TAO_CDR_OP_OASIS_BinaryStream_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


OASIS_TAO_STUB_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OASIS::BinaryStream &_tao_sequence);
OASIS_TAO_STUB_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OASIS::BinaryStream &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_OASIS_BinaryStream_H_ */

// TAO_IDL - Generated from
// .\be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OASIS_TAO_STUB_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OASIS::TimeStamp &);
OASIS_TAO_STUB_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OASIS::TimeStamp &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "OASIS_CommonC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

