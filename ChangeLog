Mon Oct  7 15:22:51 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * examples/pintools/ManualExamples/emudiv.cpp:
        * examples/pintools/ManualExamples/statica.cpp:

          Fixed include on linux.

Mon Oct  7 05:04:35 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Exception.h:

          Added more documentation.

Mon Oct  7 05:02:26 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/emudiv.cpp:
        * pin++/Exception.h:
        * pin++/Exception.inl:
        * pin++/Pintool.h:
        * pin++/Pintool.cpp:
        * pin++/Tool.h:
        * pin++/Tool.inl:
        * pin++/Try_Block.cpp:
        * pin++/pin++.mpc:

          Added wrapper classes for the exception API.

Mon Oct  7 03:20:24 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/ManualExamples.mpc:
        * examples/pintools/ManualExamples/emudiv.cpp:

          Implemented another example.

        * pin++/Arg_List.h:
        * pin++/Arg_Traits.h:

          Added IARG_REG_REFERENCE and IARG_REF_VALUE specializations.

        * pin++/Ins.h:
        * pin++/Ins.inl:
        * pin++/Insert_T.h:

          Implemented specializations for argument list with at most 8 arguments.

        * pin++/Pintool.h:
        * pin++/Pintool.inl:
        * pin++/Pintool.cpp:
        * pin++/Tool.h:
        * pin++/Tool.inl:

          Added exception handler callback.

        * pin++/Try_Block.h:
        * pin++/Try_Block.inl:
        * pin++/Try_Block.cpp:
        * pin++/pin++.mpc:

          Implemented class that objectifies PIN_TryStart/PIN_TryEnd functions.

Sat Oct  5 18:50:56 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/ManualExamples.mpc:
        * examples/pintools/ManualExamples/statica.cpp:

          Implemented another example.

        * pin++/Ins.h:
        * pin++/Ins.inl:
        * pin++/Static_Pintool.h:
        * pin++/Static_Pintool.cpp:
        * pin++/Tool.h:
        * pin++/pin++.mpc:

          Added Static_Pintool class to be used by static tools.

Sat Oct  5 05:58:27 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Arg_List.h:
        * pin++/pin++.mpc:

          Removed old files.

        * pin++/Type_Select.h:

          Removed this file.

Sat Oct  5 05:53:07 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Arg_List.h:
        * pin++/Callback.h:
        * pin++/Routine.cpp:
        * pin++/Type_Select.h:

          Fixed compilation errors.

Sat Oct  5 05:41:37 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Insert_T.h:

          Added missing file.

Sat Oct  5 05:32:46 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/malloc_mt.cpp:

          Added missing source file.

Sat Oct  5 05:31:00 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Arg_List.h:
        * pin++/Bbl.h:
        * pin++/Bbl.inl:
        * pin++/Ins.h:
        * pin++/Ins.inl:
        * pin++/Routine.h:
        * pin++/Routine.inl:
        * pin++/Trace.h:
        * pin++/Trace.inl:
        * pin++/Type_Select.h:
        * pin++/Xarg_Select.h:
        * pin++/pin++.mpc:

          Redesigned how insert_call methods are implemented, and implemented
          each up to 4 extra arguments.

        * pin++/Insert_Call_0.h:
        * pin++/Insert_Call_1.h:
        * pin++/Insert_Call_2.h:
        * pin++/Insert_Call_3.h:
        * pin++/Insert_Call_4.h:
        * pin++/Insert_Call_5.h:
        * pin++/Insert_Call_6.h:
        * pin++/Insert_Call_7.h:
        * pin++/Insert_Call_8.h:
        * pin++/Insert_Call_T.h:
        * pin++/Insert_If_Call_T.h:
        * pin++/Insert_Predicated_Call_T.h:
        * pin++/Insert_Then_Call_T.h:

          Removed these files.

Tue Oct  1 20:44:03 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Routine.cpp:

          Fixed some compilation errors on MacOS X.

Tue Oct  1 20:29:56 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/detach.cpp:

          Added enable_detach () method to start chain.

        * examples/pintools/ManualExamples/strace.cpp:

          Fixed compilation errors.

        * pin++/Routine.h:
        * pin++/Routine.inl:
        * pin++/Routine.cpp:

          Implemented more of the routine methods.

Tue Oct  1 20:15:11 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Routine.cpp:

          Reorganized the code.

Tue Oct  1 20:12:12 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Routine.h:
        * pin++/Routine.cpp:

          Implemented the extended version of replace routine in probe mode.

Tue Oct  1 19:57:04 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/ManualExamples.mpc:
        * examples/pintools/ManualExamples/replacesigprobed.cpp:
        * examples/pintools/ManualExamples/strace.cpp:
        * pin++/Arg_List.h:
        * pin++/Callback.h:
        * pin++/Callback.inl:
        * pin++/If.h:
        * pin++/Image_Tool.h:
        * pin++/Image_Tool.cpp:
        * pin++/Ins.h:
        * pin++/Ins.inl:
        * pin++/Insert_Call_4.h:
        * pin++/Insert_Call_5.h:
        * pin++/Insert_Call_6.h:
        * pin++/Insert_Call_7.h:
        * pin++/Insert_Call_8.h:
        * pin++/Insert_Call_T.h:
        * pin++/Pintool.h:
        * pin++/Pintool.inl:
        * pin++/Pintool.cpp:
        * pin++/Prototype.h:
        * pin++/Prototype.inl:
        * pin++/Replacement_Routine.h:
        * pin++/Replacement_Routine.inl:
        * pin++/Routine.h:
        * pin++/Routine.inl:
        * pin++/Routine.cpp:
        * pin++/Switch.h:
        * pin++/pin++.mpc:

          Refactored code and added initial support for replace routine while
          executing in probe mode.

Mon Sep 30 01:33:54 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Insert_Call_0.h:
        * pin++/Insert_Call_1.h:
        * pin++/Insert_Call_2.h:
        * pin++/Insert_Call_3.h:
        * pin++/Insert_Call_T.h:

          Split the specializations into their own file.

Sun Sep 29 21:51:14 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Insert_Call_T.h:
        * pin++/Pintool.h:
        * pin++/Pintool.inl:
        * pin++/Pintool.cpp:
        * pin++/Routine.h:
        * pin++/Tool.h:
        * pin++/Tool.inl:

          Fixed compilation errors.

Sun Sep 29 21:39:12 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/ManualExamples.mpc:

          Removed unnecessary export symbols.

        * examples/pintools/ManualExamples/Pintools_export.h:

          Removed this file.

Fri Sep 20 05:01:52 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/pinatrace.cpp:

          Refactored some of the code.

        * examples/pintools/ManualExamples/ManualExamples.mpc:
        * examples/pintools/ManualExamples/strace.cpp:

          Implemented another manual example.

Fri Sep 20 04:59:38 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Ins.h:
        * pin++/Ins.inl:

          Implemented more wrapper methods.

        * pin++/Arg_Traits.h:
        * pin++/Context.h:
        * pin++/Context.inl:
        * pin++/Pintool.h:
        * pin++/Pintool.inl:
        * pin++/Pintool.cpp:
        * pin++/Tool.h:
        * pin++/Tool.inl:

          Added support for system call entry/exit handle routines.

Thu Sep 19 19:08:27 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Arg_Traits.h:
        * pin++/Callback.h:
        * pin++/Callback.inl:
        * pin++/Guard.h:
        * pin++/Guard.inl:
        * pin++/Image.h:
        * pin++/Image.inl:
        * pin++/Image_Tool.h:
        * pin++/Image_Tool.inl:
        * pin++/Image_Tool.cpp:
        * pin++/Insert_Call_T.h:
        * pin++/Insert_If_Call_T.h:
        * pin++/Insert_Predicated_Call_T.h:
        * pin++/Insert_Then_Call_T.h:
        * pin++/Lock.h:
        * pin++/Lock.inl:
        * pin++/Pintool.h:
        * pin++/Pintool.inl:
        * pin++/Pintool.cpp:
        * pin++/Routine.h:
        * pin++/Routine.inl:
        * pin++/Routine_Tool.h:
        * pin++/Routine_Tool.inl:
        * pin++/Routine_Tool.cpp:
        * pin++/Section.h:
        * pin++/Section.inl:
        * pin++/TLS.h:
        * pin++/TLS.inl:
        * pin++/Tool.h:
        * pin++/Tool.inl:
        * pin++/Tool.cpp:
        * pin++/Trace.h:
        * pin++/Trace.inl:
        * pin++/Trace_Tool.h:
        * pin++/Trace_Tool.inl:
        * pin++/Trace_Tool.cpp:
        * pin++/pin++.mpc:

          Refactored the rest of the code so that everything is inlined by
          default where applicable.

        * pin++/Callback.cpp:
        * pin++/Guard.cpp:
        * pin++/Image.cpp:
        * pin++/Lock.cpp:
        * pin++/Routine.cpp:
        * pin++/Section.cpp:
        * pin++/TLS.cpp:
        * pin++/Trace.cpp:

          Removed these files.

Thu Sep 19 18:41:09 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Bbl.cpp:
        * pin++/Ins.cpp:

          Removed these files.

Thu Sep 19 18:36:30 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/detach.cpp:
        * examples/pintools/ManualExamples/fork_jit_tool.cpp:
        * examples/pintools/ManualExamples/inscount1.cpp:
        * examples/pintools/ManualExamples/inscount2.cpp:
        * examples/pintools/ManualExamples/inscount_tls.cpp:
        * examples/pintools/ManualExamples/invocation.cpp:
        * examples/pintools/ManualExamples/isampling.cpp:
        * examples/pintools/ManualExamples/itrace.cpp:
        * examples/pintools/ManualExamples/nonstatica.cpp:
        * pin++/Ins.h:
        * pin++/Ins.inl:
        * pin++/Insert_Call_T.h:
        * pin++/Insert_If_Call_T.h:
        * pin++/Insert_Then_Call_T.h:

          Re-designed how the instruction wrapper class is implemented such
          that upcalls to handle_analysis does not require pass-by-value.

        * pin++/Arg_Traits.h:
        * pin++/Bbl.h:
        * pin++/Bbl.inl:
        * pin++/Context.h:
        * pin++/Context.inl:
        * pin++/pin++.mpc:

          Started making everything inline.

        * pin++/Context.cpp:

          Removed this file.

Wed Sep 18 05:22:51 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/inscount0.cpp:
        * examples/pintools/ManualExamples/pinatrace.cpp:
        * pin++/Ins.h:
        * pin++/Ins.inl:
        * pin++/Insert_Call_T.h:
        * pin++/Insert_Predicated_Call_T.h:
        * pin++/Instruction_Tool.h:
        * pin++/Instruction_Tool.inl:
        * pin++/Instruction_Tool.cpp:
        * pin++/pin++.mpc:

          Separated the INS pass-by-refernce from pass-by-value.

Tue Sep 17 14:55:26 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/pinatrace.cpp:

          Switched from using std::ofstream to using FILE.

Tue Sep 17 14:20:53 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/pinatrace.cpp:
        * pin++/Arg_List.h:
        * pin++/Ins.inl:
        * pin++/Insert_Call_T.h:
        * pin++/Insert_If_Call_T.h:
        * pin++/Insert_Predicated_Call_T.h:
        * pin++/Insert_Then_Call_T.h:
        * pin++/Tool.inl:
        * pin++/Trace_Tool.inl:

          Fixed compilation errors on MacOS X.

Tue Sep 17 13:34:11 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/fork_jit_tool.cpp:
        * examples/pintools/ManualExamples/malloctrace.cpp:
        * examples/pintools/ManualExamples/pinatrace.cpp:
        * pin++/Arg_List.h:
        * pin++/Bbl.inl:
        * pin++/Callback.h:
        * pin++/Ins.h:
        * pin++/Ins.inl:
        * pin++/Insert_Call_T.h:
        * pin++/Insert_If_Call_T.h:
        * pin++/Insert_Predicated_Call_T.h:
        * pin++/Insert_Then_Call_T.h:
        * pin++/Routine.h:
        * pin++/Routine.inl:
        * pin++/Trace.inl:

          Re-designed architecture such that extra arguments come after the
          callback instead of setting directly on the callback.

Mon Sep 16 13:40:00 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * examples/pintools/ManualExamples/inscount_tls.cpp:
        * examples/pintools/ManualExamples/invocation.cpp:
        * examples/pintools/ManualExamples/isampling.cpp:
        * examples/pintools/ManualExamples/itrace.cpp:
        * examples/pintools/ManualExamples/malloctrace.cpp:
        * examples/pintools/ManualExamples/pinatrace.cpp:
        * examples/pintools/ManualExamples/proccount.cpp:
        * pin++/Ins.inl:

          Fixed formatting.

Mon Sep 16 03:53:12 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/ManualExamples.mpc:
        * examples/pintools/ManualExamples/pinatrace.cpp:

          Implemented the pinatrace example.

        * pin++/Arg_List.h:
        * pin++/Callback.h:
        * pin++/Callback.inl:
        * pin++/Ins.h:
        * pin++/Ins.inl:
        * pin++/Insert_Predicated_Call_T.h:
        * pin++/pin++.mpc:

          Added support for 'if-predicated' instrumentation.

Sun Sep 15 20:39:49 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Arg_List.h:
        * pin++/Bbl.inl:
        * pin++/Callback.h:
        * pin++/Insert_Call_T.h:
        * pin++/Insert_If_Call_T.h:
        * pin++/Insert_Then_Call_T.h:

          Fixed compilation errors on MacOS X.

Sun Sep 15 20:05:32 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/ManualExamples.mpc:
        * examples/pintools/ManualExamples/malloctrace.cpp:
        * pin++/Arg_List.h:
        * pin++/Arg_Traits.h:
        * pin++/Bbl.inl:
        * pin++/Callback.h:
        * pin++/Callback.inl:
        * pin++/Image.h:
        * pin++/Image.inl:
        * pin++/Ins.inl:
        * pin++/Insert_Call_T.h:
        * pin++/Insert_If_Call_T.h:
        * pin++/Insert_Then_Call_T.h:
        * pin++/Tool.h:
        * pin++/pin++.mpc:

          Added initial support for supporting argument types that require
          an extra argument.

        * examples/pintools/ManualExamples/nonstatica.cpp:
        * examples/pintools/ManualExamples/staticcount.cpp:
        * pin++/Routine.h:
        * pin++/Routine.inl:

          Implemented the Routine_Guard class, which is used to automatically
          open/close a routine within the current scope.

Fri Sep 13 15:27:36 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * examples/pintools/ManualExamples/fork_jit_tool.cpp:
        * examples/pintools/ManualExamples/inscount_tls.cpp:
        * examples/pintools/ManualExamples/invocation.cpp:

          Updated to use the Context and Const_Context wrappers.

        * examples/pintools/ManualExamples/proccount.cpp:

          Fixed include for auto_ptr.

        * pin++/Callback.inl:
        * pin++/Context.h:
        * pin++/Context.inl:
        * pin++/Context.cpp:
        * pin++/Pintool.cpp:
        * pin++/Tool.h:
        * pin++/Tool.inl:
        * pin++/pin++.mpc:

          Added the Context and Const_Context wrappers.  They are used
          with the fork and thread start hooks.

Thu Sep 12 14:24:11 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * examples/pintools/ManualExamples/nonstatica.cpp:
        * examples/pintools/ManualExamples/staticcount.cpp:

          Updated to remove the open/close calls since Routines handle that
          automatically.

Wed Sep 11 18:40:38 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/ManualExamples.mpc:
        * examples/pintools/ManualExamples/proccount.cpp:

          Implemented the proccount manual example.

        * examples/pintools/ManualExamples/invocation.cpp:
        * pin++/Routine.h:
        * pin++/Routine.inl:

          Routine is implemented as a smart pointer where the RTN is
          open/closed in the constructor/destructor. Also, the destination
          object takes ownership of the RTN.

        * pin++/pin++.mpc:

          Fixed an error in the project specification.

Wed Sep 11 18:37:59 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * examples/pintools/ManualExamples/ManualExamples.mpc:
        * examples/pintools/ManualExamples/follow_child_tool.cpp:

          Added follow_child_tool

        * pin++/Callback.h:
        * pin++/Callback.inl:
        * pin++/Tool.h:
        * pin++/Tool.inl:

          Added add_follow_child_process_function and an associated
          handle_child_process hook

Wed Sep 11 16:23:59 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * examples/pintools/ManualExamples/ManualExamples.mpc:
        * examples/pintools/ManualExamples/staticcount.cpp:

          Added static count pintool

Wed Sep 11 14:12:15 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * examples/pintools/ManualExamples/fork_jit_tool.cpp:
        * examples/pintools/ManualExamples/nonstatica.cpp:

          Fixed implementation to use Tool calls rather than static wrappers

        * pin++/Lock.h:

          Added Doxygen tag

        * pin++/Tool.h:
        * pin++/Tool.inl:

          Moved Dbg and Process calls to Tool

        * pin++/pin++.mpc:

          Updated to remove Dbg and Process classes

        * pin++/Dbg.h:
        * pin++/Dbg.inl:
        * pin++/Dbg.cpp:
        * pin++/Process.h:
        * pin++/Process.inl:
        * pin++/Process.cpp:

          Removed these files.

Wed Sep 11 12:41:25 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Routine_Tool.h:
        * pin++/Routine_Tool.inl:
        * pin++/Routine_Tool.cpp:

          Fixed implementation problems.

Tue Sep 10 19:18:53 UTC 2013  dfeiock  <dfeiock at iupui dot edu>

        * examples/pintools/ManualExamples/ManualExamples.mpc:
        * examples/pintools/ManualExamples/nonstatica.cpp:

          Implemented nonstatica manual example

        * pin++/Callback.inl:

          Fixed typo

        * pin++/Dbg.h:
        * pin++/Dbg.inl:
        * pin++/Dbg.cpp:

          Added basic wrapper for the Dbg module

        * pin++/Ins.h:
        * pin++/Ins.inl:

          Implemented INS_Size, INS_Address, and INS_Disassemble

Tue Sep 10 16:08:48 UTC 2013  dfeiock  <dfeiock at iupui dot edu>

        * examples/pintools/ManualExamples/ManualExamples.mpc:
        * examples/pintools/ManualExamples/fork_jit_tool.cpp:

          Added fork_jit_tool

        * examples/pintools/ManualExamples/isampling.cpp:

          Fixed compilation error on linux

        * pin++/Callback.h:
        * pin++/Callback.inl:

          Added __analyze_fork hook

        * pin++/Tool.h:
        * pin++/Tool.inl:

          Allowed all Tools to instrument fork calls via add_fork_function

        * pin++/Process.h:
        * pin++/Process.inl:
        * pin++/Process.cpp:
        * pin++/pin++.mpc:

          Added Process API wrapper

Tue Sep 10 15:59:03 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/ManualExamples.mpc:
        * examples/pintools/ManualExamples/invocation.cpp:

          Implemented the invocation example.

        * pin++/Arg_Traits.h:
        * pin++/Image.h:
        * pin++/Image.inl:
        * pin++/Ins.h:
        * pin++/Ins.inl:
        * pin++/Insert_Call_T.h:
        * pin++/Routine.h:
        * pin++/Routine.inl:
        * pin++/Routine.cpp:
        * pin++/Routine_Tool.h:
        * pin++/Routine_Tool.inl:
        * pin++/Routine_Tool.cpp:
        * pin++/Section.h:
        * pin++/Section.inl:
        * pin++/pin++.mpc:

          Added wrapper class for Routine, and integrated routine support into
          Section and Image class.

Tue Sep 10 14:35:59 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Image.h:
        * pin++/Image.inl:
        * pin++/Section.h:
        * pin++/Section.inl:
        * pin++/Section.cpp:
        * pin++/pin++.mpc:

          . Added wrapper class for SEC object.
          . Integrated Section object with Image object.
          . Added iterator support to Image object.

Tue Sep 10 14:07:39 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/ManualExamples.mpc:
        * examples/pintools/ManualExamples/imageload.cpp:

          Implemented the imageload manual example.

        * pin++/Image.h:
        * pin++/Image.inl:
        * pin++/Image.cpp:
        * pin++/Image_Tool.h:
        * pin++/Image_Tool.inl:
        * pin++/Image_Tool.cpp:
        * pin++/pin++.mpc:

          Added support for image-level instrumentation tools.

Tue Sep 10 13:20:07 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/inscount0.cpp:
        * examples/pintools/ManualExamples/inscount1.cpp:
        * examples/pintools/ManualExamples/inscount2.cpp:
        * examples/pintools/ManualExamples/inscount_tls.cpp:

          Updated the main () method to use temp objects to start the program.

        * pin++/Pintool.h:
        * pin++/Pintool.inl:

          Made enable* methods return a reference to the Pintool so we can
          concatentate multiple enable commands, keep the runner as a temp
          object.

Tue Sep 10 03:00:23 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/ManualExamples.mpc:
        * examples/pintools/ManualExamples/inscount_tls.cpp:
        * pin++/Guard.h:
        * pin++/Guard.inl:
        * pin++/Guard.cpp:
        * pin++/Lock.h:
        * pin++/Pintool.h:
        * pin++/Pintool.cpp:
        * pin++/TLS.h:
        * pin++/TLS.inl:
        * pin++/TLS.cpp:
        * pin++/Tool.h:
        * pin++/pin++.mpc:

          Implemented the inscount_tls example, which required adding support
          for locks, guards, and thread-local storage in Pin.

Tue Sep 10 00:43:41 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/detach.cpp:
        * examples/pintools/ManualExamples/inscount0.cpp:
        * examples/pintools/ManualExamples/inscount1.cpp:
        * examples/pintools/ManualExamples/inscount2.cpp:
        * examples/pintools/ManualExamples/isampling.cpp:
        * examples/pintools/ManualExamples/itrace.cpp:
        * pin++/Instruction_Tool.h:
        * pin++/Instruction_Tool.inl:
        * pin++/Instruction_Tool.cpp:
        * pin++/Pintool.h:
        * pin++/Pintool.inl:
        * pin++/Pintool.cpp:
        * pin++/Tool.h:
        * pin++/Tool.inl:
        * pin++/Tool.cpp:
        * pin++/Trace_Tool.h:
        * pin++/Trace_Tool.inl:
        * pin++/Trace_Tool.cpp:
        * pin++/pin++.mpc:

          Parameters the scoped tool types. This allows us to remove the
          virtual methods for the tools. Also, added runner class named
          Pintool, that allocates the tool implementation so that is stays
          around after the tool is detached. The runner class also simplifies
          how to start a pin tool.

        * pin++/Lock.h:
        * pin++/Lock.inl:
        * pin++/Lock.cpp:

          Wrapper class for locks in Pin.

Mon Sep  9 20:25:16 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/detach.cpp:

          Fixed runtime errors in detach example.

        * examples/pintools/ManualExamples/ManualExamples.mpc:
        * examples/pintools/ManualExamples/isampling.cpp:
        * pin++/Bbl.h:
        * pin++/Bbl.inl:
        * pin++/Callback.h:
        * pin++/Callback.inl:
        * pin++/Ins.h:
        * pin++/Ins.inl:
        * pin++/Insert_If_Call_T.h:
        * pin++/Insert_Then_Call_T.h:
        * pin++/Tool.inl:
        * pin++/pin++.mpc:

          Implemented isample example, which required support for insert_call_if
          and insert_call_then instrumentation points.

Mon Sep  9 19:41:01 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * examples/pintools/ManualExamples/ManualExamples.mpc:
        * examples/pintools/ManualExamples/detach.cpp:

          Added detach example

        * pin++/Ins.inl:

          Fixed typo

        * pin++/Tool.h:
        * pin++/Tool.inl:
        * pin++/Tool.cpp:

          Added current () static method, and implemented detach support
          for a pin tool.

Sun Sep  8 22:01:12 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/ManualExamples.mpc:
        * examples/pintools/ManualExamples/itrace.cpp:

          Implemented the itrace example.

Sun Sep  8 04:46:55 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Callback.h:

          Fixed compilation errors.

Sun Sep  8 03:42:49 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Callback.h:
        * pin++/Insert_Call_T.h:

          Added more documentation.

Sun Sep  8 03:34:16 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * oasis/probes/Software_Probe_Header.h:

          Re-adding deleted file.

Sun Sep  8 03:25:04 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * oasis/probes/Software_Probe_Header.inl:

          Re-adding deleted file.

Sun Sep  8 03:23:19 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Trace.h:

          Fixed compilation errors.

Sun Sep  8 03:19:49 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/pin++.mpc:

          Removed obselete files.

Sun Sep  8 03:16:18 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/inscount0.cpp:
        * examples/pintools/ManualExamples/inscount1.cpp:
        * examples/pintools/ManualExamples/inscount2.cpp:
        * pin++/Bbl.h:
        * pin++/Bbl.inl:
        * pin++/Callback.h:
        * pin++/Callback.inl:
        * pin++/Callback.cpp:
        * pin++/Ins.h:
        * pin++/Ins.inl:
        * pin++/Insert_Call_T.h:
        * pin++/pin++.mpc:

          Updated architecture so that you do not need type specific
          callbacks, which prevented their reuse.

        * pin++/Bbl_Callback.h:
        * pin++/Bbl_Callback.inl:
        * pin++/Bbl_Callback.cpp:
        * pin++/Bbl_Callback0.h:
        * pin++/Bbl_Callback0.inl:
        * pin++/Bbl_Callback0.cpp:
        * pin++/Instruction_Callback.h:
        * pin++/Instruction_Callback.inl:
        * pin++/Instruction_Callback.cpp:
        * pin++/Instruction_Callback0.h:
        * pin++/Instruction_Callback0.inl:
        * pin++/Instruction_Callback0.cpp:
        * pin++/Instruction_Callback1.h:
        * pin++/Instruction_Callback1.inl:
        * pin++/Instruction_Callback1.cpp:
        * pin++/Instruction_Callback2.h:
        * pin++/Instruction_Callback2.inl:
        * pin++/Instruction_Callback2.cpp:
        * pin++/Instruction_Callback3.h:
        * pin++/Instruction_Callback3.inl:
        * pin++/Instruction_Callback3.cpp:
        * pin++/Trace_Callback.h:
        * pin++/Trace_Callback.inl:
        * pin++/Trace_Callback.cpp:
        * pin++/Trace_Callback0.h:
        * pin++/Trace_Callback0.inl:
        * pin++/Trace_Callback0.cpp:

          Removed these files.

Sat Sep  7 20:24:24 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Bbl_Callback0.h:
        * pin++/Bbl_Callback0.inl:

          Added fastcall support.

Sat Sep  7 20:14:24 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/ManualExamples.mpc:
        * examples/pintools/ManualExamples/inscount2.cpp:

          Implemented inscount2 example from manual.

        * pin++/Instruction_Callback0.h:
        * pin++/Instruction_Callback0.inl:

          Added fastcall support to callback.

Sat Sep  7 19:37:14 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * OASIS_PDL/be/cpp/Metadata_Cpp_Generator_Visitor.h:
        * OASIS_PDL/be/cpp/Metadata_Cpp_Generator_Visitor.cpp:
        * oasis/probes/Software_Probe_Header.h:
        * oasis/probes/Software_Probe_Header.inl:

          Accidently deleted these files.

Sat Sep  7 16:06:54 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * examples/pintools/ManualExamples/inscount1.cpp:

          Fixed runtime errors.

Sat Sep  7 06:27:02 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Bbl.h:
        * pin++/Bbl.inl:
        * pin++/Ins.h:
        * pin++/Ins.inl:

          Fixed compilation errors on MacOS X.

Sat Sep  7 06:12:43 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * pin++/Bbl.h:
        * pin++/Bbl.inl:
        * pin++/Bbl.cpp:
        * pin++/Bbl_Callback.h:
        * pin++/Bbl_Callback.inl:
        * pin++/Bbl_Callback.cpp:
        * pin++/Bbl_Callback0.h:
        * pin++/Bbl_Callback0.inl:
        * pin++/Bbl_Callback0.cpp:
        * pin++/Ins.h:
        * pin++/Ins.inl:
        * pin++/Instruction_Callback.h:
        * pin++/Instruction_Callback0.h:
        * pin++/Instruction_Callback2.h:
        * pin++/Instruction_Callback3.h:
        * pin++/Trace.h:
        * pin++/Trace.inl:
        * pin++/Trace.cpp:
        * pin++/Trace_Callback.h:
        * pin++/Trace_Callback.inl:
        * pin++/Trace_Callback.cpp:
        * pin++/Trace_Callback0.h:
        * pin++/Trace_Callback0.inl:
        * pin++/Trace_Callback0.cpp:
        * pin++/Trace_Tool.h:
        * pin++/Trace_Tool.inl:
        * pin++/Trace_Tool.cpp:
        * pin++/pin++.mpc:

          Added support for TRACE and BBL constructs, and implemented
          the second example from the manual.

Fri Sep  6 23:22:01 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * tests/tools/pin:
        * tests/tools/pin/tools:
        * tests/tools/pin/tools/SimpleExamples:
        * tests/tools/pin/tools/SimpleExamples/SimpleExample.mpc:
        * tests/tools/pin/tools/SimpleExamples/SimpleExample_export.h:
        * tests/tools/pin/tools/SimpleExamples/icount.cpp:

          First original pintool implemented using Pin++.

Fri Sep  6 23:17:26 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * MPC/config/oasis_common.mpb:
        * MPC/config/oasis_lib.mpb:
        * MPC/config/oasis_pintool.mpb:
        * MPC/config/requires_pin.mpb:
        * OASIS.mwc:
        * oasis/probes/pintool/memory_footprint/Memory_Footprint.mpc:
        * pin++:
        * pin++/Arg_Traits.h:
        * pin++/Ins.h:
        * pin++/Ins.inl:
        * pin++/Ins.cpp:
        * pin++/Instruction_Callback.h:
        * pin++/Instruction_Callback.inl:
        * pin++/Instruction_Callback.cpp:
        * pin++/Instruction_Callback0.h:
        * pin++/Instruction_Callback0.inl:
        * pin++/Instruction_Callback0.cpp:
        * pin++/Instruction_Callback1.h:
        * pin++/Instruction_Callback1.inl:
        * pin++/Instruction_Callback1.cpp:
        * pin++/Instruction_Callback2.h:
        * pin++/Instruction_Callback2.inl:
        * pin++/Instruction_Callback2.cpp:
        * pin++/Instruction_Callback3.h:
        * pin++/Instruction_Callback3.inl:
        * pin++/Instruction_Callback3.cpp:
        * pin++/Instruction_Tool.h:
        * pin++/Instruction_Tool.inl:
        * pin++/Instruction_Tool.cpp:
        * pin++/Pin_export.h:
        * pin++/Tool.h:
        * pin++/Tool.inl:
        * pin++/Tool.cpp:
        * pin++/pin++.mpc:

          First re-write of the Pin++ architecture where it contains no
          other middleware technology (e.g., OASIS and ACE).

        * MPC/config/requires_pintool.mpb:
        * oasis/tools/PINtool:
        * oasis/tools/PINtool/Instruction_Builder.h:
        * oasis/tools/PINtool/Instruction_Builder.inl:
        * oasis/tools/PINtool/Instruction_Builder.cpp:
        * oasis/tools/PINtool/Instruction_Callback.h:
        * oasis/tools/PINtool/Instruction_Callback.inl:
        * oasis/tools/PINtool/Instruction_Callback.cpp:
        * oasis/tools/PINtool/Instruction_Callback0.h:
        * oasis/tools/PINtool/Instruction_Callback0.inl:
        * oasis/tools/PINtool/Instruction_Callback0.cpp:
        * oasis/tools/PINtool/Instruction_Callback1.h:
        * oasis/tools/PINtool/Instruction_Callback1.inl:
        * oasis/tools/PINtool/Instruction_Callback1.cpp:
        * oasis/tools/PINtool/Instruction_Callback2.h:
        * oasis/tools/PINtool/Instruction_Callback2.inl:
        * oasis/tools/PINtool/Instruction_Callback2.cpp:
        * oasis/tools/PINtool/Instruction_Callback3.h:
        * oasis/tools/PINtool/Instruction_Callback3.inl:
        * oasis/tools/PINtool/Instruction_Callback3.cpp:
        * oasis/tools/PINtool/Instruction_Probe.h:
        * oasis/tools/PINtool/Instruction_Probe.inl:
        * oasis/tools/PINtool/Instruction_Probe.cpp:
        * oasis/tools/PINtool/PIN_Arg.h:
        * oasis/tools/PINtool/PINtool.h:
        * oasis/tools/PINtool/PINtool.inl:
        * oasis/tools/PINtool/PINtool.cpp:
        * oasis/tools/PINtool/PINtool.mpc:
        * oasis/tools/PINtool/PINtool_Loader.cpp:
        * oasis/tools/PINtool/PINtool_export.h:
        * oasis/tools/PINtool/Trace_Builder.h:
        * oasis/tools/PINtool/Trace_Builder.inl:
        * oasis/tools/PINtool/Trace_Builder.cpp:
        * oasis/tools/PINtool/Trace_Callback.h:
        * oasis/tools/PINtool/Trace_Callback.inl:
        * oasis/tools/PINtool/Trace_Callback.cpp:
        * oasis/tools/PINtool/Trace_Callback0.h:
        * oasis/tools/PINtool/Trace_Callback0.inl:
        * oasis/tools/PINtool/Trace_Callback0.cpp:
        * oasis/tools/PINtool/Trace_Probe.h:
        * oasis/tools/PINtool/Trace_Probe.inl:
        * oasis/tools/PINtool/Trace_Probe.cpp:

          Removed these files.

Fri Sep  6 14:26:12 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/tools/PINtool/Trace.h:
        * oasis/tools/PINtool/Trace.inl:
        * oasis/tools/PINtool/Trace.cpp:

          Getting started on a lightweight wrapper for PIN TRACE.

Sat Aug 24 18:41:36 UTC 2013  James H. Hill  <hillj at cs dot iupui dot edu>

        * MPC/config/oasis_pintool.mpb:
        * oasis/tools/PINtool/PINtool.mpc:

          Updated pintool base project.

Thu Aug 22 15:25:19 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * MPC/config/oasis_perf_no_payload.mpb:

          Added feature to easily benchmark PIN architecture overhead

        * oasis/probes/pintool/instruction_address_trace/Instruction_Address_Probe.mpc:
        * oasis/probes/pintool/instruction_address_trace/Instruction_Address_Probe_Impl.inl:
        * oasis/probes/pintool/instruction_counter/Instruction_Counter_Probe.mpc:
        * oasis/probes/pintool/instruction_counter/Instruction_Counter_Probe_Impl.inl:

          Updated to use the OASIS_PERF_NO_PAYLOAD guard

        * oasis/probes/pintool/memory_footprint:
        * oasis/probes/pintool/memory_footprint/Memory_Footprint.mpc:
        * oasis/probes/pintool/memory_footprint/Memory_Footprint_Probe.pdl:
        * oasis/probes/pintool/memory_footprint/Memory_Footprint_Probe_Impl.h:
        * oasis/probes/pintool/memory_footprint/Memory_Footprint_Probe_Impl.inl:
        * oasis/probes/pintool/memory_footprint/Memory_Footprint_Probe_Impl.cpp:
        * oasis/probes/pintool/memory_footprint/Memory_Footprint_Probe_Impl_export.h:

          Implemented the memory footprint pintool included with PIN.

        * oasis/tools/PINtool/Instruction_Builder.h:
        * oasis/tools/PINtool/Instruction_Builder.inl:
        * oasis/tools/PINtool/Trace_Builder.h:
        * oasis/tools/PINtool/Trace_Builder.inl:
        * oasis/tools/PINtool/Instruction_Probe.cpp:
        * oasis/tools/PINtool/Trace_Probe.cpp:

          Updated builders to no longer store/assign the probe to the
          callback.  This is a temporary measure until the memory footprint
          use case is resolved (Trace probe constructing an Instruction
          builder).

        * oasis/tools/PINtool/Instruction_Callback1.cpp:
        * oasis/tools/PINtool/Instruction_Callback2.h:
        * oasis/tools/PINtool/Instruction_Callback2.inl:
        * oasis/tools/PINtool/Instruction_Callback2.cpp:
        * oasis/tools/PINtool/Instruction_Callback3.h:
        * oasis/tools/PINtool/Instruction_Callback3.inl:
        * oasis/tools/PINtool/Instruction_Callback3.cpp:
        * oasis/tools/PINtool/PIN_Arg.h:
        * oasis/tools/PINtool/PINtool.mpc:

          Extended instruction callbacks to support more arguments

Wed Aug 14 19:52:27 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/tools/PINtool/PINtool.h:
        * oasis/tools/PINtool/PINtool.cpp:
        * oasis/tools/PINtool/PINtool.mpc:
        * oasis/tools/PINtool/Trace_Builder.h:
        * oasis/tools/PINtool/Trace_Builder.inl:
        * oasis/tools/PINtool/Trace_Builder.cpp:
        * oasis/tools/PINtool/Trace_Callback.h:
        * oasis/tools/PINtool/Trace_Callback.inl:
        * oasis/tools/PINtool/Trace_Callback.cpp:
        * oasis/tools/PINtool/Trace_Callback0.h:
        * oasis/tools/PINtool/Trace_Callback0.inl:
        * oasis/tools/PINtool/Trace_Callback0.cpp:
        * oasis/tools/PINtool/Trace_Probe.h:
        * oasis/tools/PINtool/Trace_Probe.inl:
        * oasis/tools/PINtool/Trace_Probe.cpp:

          Added PIN TRACE abstractions

Tue Aug 13 18:09:25 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * performance-tests/pintool:
        * performance-tests/pintool/Smoke_Test:
        * performance-tests/pintool/Smoke_Test/Smoke_Test.dac:
        * performance-tests/pintool/Smoke_Test/Smoke_Test.einode.instruction0:
        * performance-tests/pintool/Smoke_Test/Smoke_Test.einode.instruction1_inst_ptr:
        * performance-tests/pintool/Smoke_Test/run_test.pl:
        * performance-tests/pintool/null_probe:
        * performance-tests/pintool/null_probe/Null_PINtool_Probe.mpc:
        * performance-tests/pintool/null_probe/Null_PINtool_Probe.pdl:
        * performance-tests/pintool/null_probe/Null_PINtool_Probe_Impl.h:
        * performance-tests/pintool/null_probe/Null_PINtool_Probe_Impl.inl:
        * performance-tests/pintool/null_probe/Null_PINtool_Probe_Impl.cpp:
        * performance-tests/pintool/null_probe/Null_PINtool_Probe_Impl_export.h:

          Added performance test for comparing OASIS PIN with native PIN.

Thu Aug  8 15:18:42 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/probes/pintool/instruction_address_trace:
        * oasis/probes/pintool/instruction_address_trace/Instruction_Address_Probe.mpc:
        * oasis/probes/pintool/instruction_address_trace/Instruction_Address_Probe.pdl:
        * oasis/probes/pintool/instruction_address_trace/Instruction_Address_Probe_Impl.h:
        * oasis/probes/pintool/instruction_address_trace/Instruction_Address_Probe_Impl.inl:
        * oasis/probes/pintool/instruction_address_trace/Instruction_Address_Probe_Impl.cpp:
        * oasis/probes/pintool/instruction_address_trace/Instruction_Address_Probe_Impl_export.h:

          Added instruction address trace probe

        * oasis/probes/pintool/instruction_counter/Instruction_Counter_Probe_Impl.cpp:

          Changed handle_collect_data to do nothing for benchmarking purposes

        * oasis/tools/PINtool/Instruction_Callback1.h:
        * oasis/tools/PINtool/Instruction_Callback1.inl:
        * oasis/tools/PINtool/Instruction_Callback1.cpp:
        * oasis/tools/PINtool/PIN_Arg.h:

          Added support for callbacks using IARG_INST_PTR

        * oasis/tools/PINtool/PINtool.h:
        * oasis/tools/PINtool/PINtool.inl:
        * oasis/tools/PINtool/PINtool.cpp:
        * oasis/tools/PINtool/PINtool.mpc:

          Updated to allow a benchmark flag, which times the execution of the
          pintool and outputs it into benchmark.log

        * tests/probes/pintool/instruction_address_trace:
        * tests/probes/pintool/instruction_address_trace/Smoke_Test:
        * tests/probes/pintool/instruction_address_trace/Smoke_Test/Smoke_Test.dac:
        * tests/probes/pintool/instruction_address_trace/Smoke_Test/Smoke_Test.einode:
        * tests/probes/pintool/instruction_address_trace/Smoke_Test/run_test.pl:
        * tests/probes/pintool/instruction_counter/Smoke_Test/Smoke_Test.einode:
        * tests/probes/pintool/instruction_counter/Smoke_Test/run_test.pl:

          Added/updated smoke tests for PINtool probes.

Fri Mar  8 17:48:10 UTC 2013  Manjula Peiris  <tmpeiris at iupui dot edu>

        * oasis/DataAcquisitionController/Standard_DAC_App.inl:

          Fixed the compilation erro when TAO is disabled.

        * oasis/DataAcquisitionController/handler/archive/Archive_Service.h:
        * oasis/DataAcquisitionController/handler/archive/Archive_Service.cpp:
        * oasis/DataAcquisitionController/handler/archive/Archive_Service.idl:
        * oasis/DataAcquisitionController/handler/archive/Archive_Service.mpc:
        * oasis/DataAcquisitionController/handler/archive/Archive_Service_i.h:
        * oasis/DataAcquisitionController/handler/archive/Archive_Service_i.cpp:
        * oasis/DataAcquisitionController/handler/archive/Metric_Cursor_i.h:
        * oasis/DataAcquisitionController/handler/archive/Metric_Cursor_i.cpp:
        * oasis/DataAcquisitionController/handler/archive/Metrics_Table.h:
        * oasis/DataAcquisitionController/handler/archive/Metrics_Table.cpp:
        * oasis/DataAcquisitionController/handler/archive/Query.idl:
        * oasis/DataAcquisitionController/handler/archive/Query_Visitor.h:
        * oasis/DataAcquisitionController/handler/archive/Query_Visitor.cpp:
        * oasis/DataAcquisitionController/handler/archive/Query_i.h:
        * oasis/DataAcquisitionController/handler/archive/Query_i.cpp:
        * oasis/DataAcquisitionController/handler/archive/TAO_Archive_Service.h:
        * oasis/DataAcquisitionController/handler/archive/TAO_Archive_Service.cpp:
        * oasis/DataAcquisitionController/handler/archive/feature_specific.mpb:

          Added the code for Remote cursor and query for the Metric table.;

Thu Feb 14 18:15:24 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/probes/pintool/instruction_counter/Instruction_Counter_Probe.pdl:
        * oasis/probes/pintool/instruction_counter/Instruction_Counter_Probe_Impl.h:
        * oasis/probes/pintool/instruction_counter/Instruction_Counter_Probe_Impl.inl:
        * oasis/probes/pintool/instruction_counter/Instruction_Counter_Probe_Impl.cpp:

          Updated probe to include a predicated count

        * oasis/tools/PINtool/Instruction_Builder.h:
        * oasis/tools/PINtool/Instruction_Builder.inl:
        * oasis/tools/PINtool/Instruction_Callback.h:
        * oasis/tools/PINtool/Instruction_Callback.inl:
        * oasis/tools/PINtool/Instruction_Callback0.h:
        * oasis/tools/PINtool/Instruction_Callback0.inl:

          Implemented the insert_predicated_call method.

Tue Feb 12 19:46:20 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/probes/pintool/instruction_counter/Instruction_Counter_Probe_Impl.h:
        * oasis/probes/pintool/instruction_counter/Instruction_Counter_Probe_Impl.inl:
        * oasis/probes/pintool/instruction_counter/Instruction_Counter_Probe_Impl.cpp:
        * oasis/tools/PINtool/Instruction_Builder.h:
        * oasis/tools/PINtool/Instruction_Builder.inl:
        * oasis/tools/PINtool/Instruction_Builder.cpp:
        * oasis/tools/PINtool/Instruction_Callback.h:
        * oasis/tools/PINtool/Instruction_Callback.inl:
        * oasis/tools/PINtool/Instruction_Callback.cpp:
        * oasis/tools/PINtool/Instruction_Callback0.h:
        * oasis/tools/PINtool/Instruction_Callback0.inl:
        * oasis/tools/PINtool/Instruction_Callback0.cpp:
        * oasis/tools/PINtool/Instruction_Probe.h:
        * oasis/tools/PINtool/Instruction_Probe.inl:
        * oasis/tools/PINtool/Instruction_Probe.cpp:
        * oasis/tools/PINtool/PINtool.mpc:
        * oasis/tools/PINtool/PINtool.cpp:
        * oasis/tools/PINtool/PINtool_export.h:
        * tests/probes/pintool/instruction_counter/Smoke_Test/Smoke_Test.einode:
        * tests/probes/pintool/instruction_counter/Smoke_Test/run_test.pl:

          Added abstraction for PIN probes to aggregate Callback objects which
          perform the PIN analysis.

Wed Feb  6 20:15:37 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * MPC/config/oasis_common.mpb:
        * MPC/config/oasis_softwareprobe.mpb:
        * OASIS_PDL/be/tdl/Tdl_Probe_Generator.h:
        * OASIS_PDL/fe/PDL_Complex_Type.inl:
        * OASIS_PDL/fe/PDL_Declaration.inl:
        * OASIS_PDL/fe/PDL_Probe.inl:
        * OASIS_PDL/fe/PDL_Vector_Type.inl:
        * OASIS_PDL/fe/PDL_Visitor.inl:
        * oasis/DataAcquisitionController/feature_specific.mpb:
        * oasis/DataChannel/Latest_Local_Data_Channel.cpp:
        * oasis/EINode/Standard_EINode.h:
        * oasis/EINode/Standard_EINode.inl:
        * oasis/EINode/Standard_EINode.cpp:
        * oasis/middleware/Exceptions.h:
        * oasis/middleware/tao/Data_Channel/Tao_Data_Packet.inl:
        * oasis/middleware/tao/Data_Channel/Tao_Data_Packet.cpp:
        * oasis/probes/Software_Probe_Impl.inl:
        * oasis/probes/Software_Probe_Impl.cpp:
        * oasis/probes/Software_Probe_Instance.h:
        * oasis/probes/Software_Probe_Metadata.h:

          Fixed inline compilation errors.  The noinline feature now
          controls if methods should be inlined or not.

Fri Feb  1 15:19:49 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * MPC/config/oasis_pintool.mpb:

          Added base project for all oasis pintool probes

        * oasis/middleware/tao/Data_Channel/Tao_Data_Channel_Client.cpp:

          Extended exception handling

        * oasis/probes/pintool/instruction_counter/Instruction_Counter_Probe.mpc:
        * oasis/probes/pintool/instruction_counter/Instruction_Counter_Probe.pdl:
        * oasis/probes/pintool/instruction_counter/Instruction_Counter_Probe_Impl.h:
        * oasis/probes/pintool/instruction_counter/Instruction_Counter_Probe_Impl.inl:
        * oasis/probes/pintool/instruction_counter/Instruction_Counter_Probe_Impl.cpp:
        * oasis/probes/pintool/instruction_counter/Instruction_Counter_Probe_Impl_export.h:

          Created probe implementation.

        * oasis/tools/PINtool/PINtool.h:
        * oasis/tools/PINtool/PINtool.cpp:
        * oasis/tools/PINtool/PINtool.mpc:
        * oasis/tools/PINtool/PINtool_Loader.cpp:

          Added support for probe implementations.  There is still a major
          design change needed, but this is stable.

        * tests/probes/pintool/instruction_counter/Smoke_Test/Smoke_Test.einode:
        * tests/probes/pintool/instruction_counter/Smoke_Test/run_test.pl:

          Modified to use the instruction counter probe impl.

        * tests/probes/pintool/instruction_counter/Smoke_Test/OASIS_Instruction_Counter_Probe.mpc:
        * tests/probes/pintool/instruction_counter/Smoke_Test/driver.cpp:

          Removed these files.

Wed Jan 30 18:33:02 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/probes/hardware/temperature/Analog_TemperatureProbe_Impl.cpp:

          Fixed typo with init hook.

Mon Jan 28 16:06:02 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/probes/hardware/temperature/Analog_TemperatureProbe_Impl.h:
        * oasis/probes/hardware/temperature/Analog_TemperatureProbe_Impl.cpp:
        * oasis/probes/network/switch/SwitchProbe_Impl.h:
        * oasis/probes/network/switch/SwitchProbe_Impl.cpp:
        * oasis/probes/system/network/NetworkProbe_Impl.h:
        * oasis/probes/system/network/NetworkProbe_Impl.cpp:

          Fixed bug with init hook which caused the probes to not initalize
          when loaded by the einode config file.

Fri Jan 25 16:06:18 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * MPC/config/requires_pintool.mpb:
        * oasis/tools/PINtool:
        * oasis/tools/PINtool/PINtool.h:
        * oasis/tools/PINtool/PINtool.inl:
        * oasis/tools/PINtool/PINtool.cpp:
        * oasis/tools/PINtool/PINtool.mpc:
        * oasis/tools/PINtool/PINtool_Loader.cpp:

          Created a generic OASIS PINtool probe loader.

Thu Jan 24 14:44:16 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Acceptor.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Handler.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Publisher_Service.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Publisher_Service.mpc:

          Modified to use the websocket acceptor-connector library.

        * oasis/middleware/websocket:
        * oasis/middleware/websocket/acceptor-connector:
        * oasis/middleware/websocket/acceptor-connector/Websock_Acceptor.h:
        * oasis/middleware/websocket/acceptor-connector/Websock_Acceptor.inl:
        * oasis/middleware/websocket/acceptor-connector/Websock_Acceptor.cpp:
        * oasis/middleware/websocket/acceptor-connector/Websock_Acceptor_Connector.mpc:
        * oasis/middleware/websocket/acceptor-connector/Websock_Acceptor_Connector_export.h:
        * oasis/middleware/websocket/acceptor-connector/Websock_Acceptor_Task.h:
        * oasis/middleware/websocket/acceptor-connector/Websock_Acceptor_Task.cpp:
        * oasis/middleware/websocket/acceptor-connector/Websock_Frame.h:
        * oasis/middleware/websocket/acceptor-connector/Websock_Frame.inl:
        * oasis/middleware/websocket/acceptor-connector/Websock_Frame.cpp:
        * oasis/middleware/websocket/acceptor-connector/Websock_Stream.h:
        * oasis/middleware/websocket/acceptor-connector/Websock_Stream.inl:
        * oasis/middleware/websocket/acceptor-connector/Websock_Stream.cpp:
        * oasis/middleware/websocket/acceptor-connector/Websock_Svc_Handler.h:
        * oasis/middleware/websocket/acceptor-connector/Websock_Svc_Handler.cpp:

          Decoupled the ACE_Websock classes from the OASIS_Websocket handler.

        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websock_Acceptor.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websock_Acceptor.inl:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websock_Acceptor.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websock_Acceptor_Task.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websock_Acceptor_Task.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websock_Frame.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websock_Frame.inl:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websock_Frame.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websock_Stream.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websock_Stream.inl:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websock_Stream.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websock_Svc_Handler.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websock_Svc_Handler.cpp:

          Removed these files.

Thu Jan 17 15:13:57 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * MPC/config/pintools_32bit.mpb:

          Removed this file.

Thu Jan 17 14:40:56 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * MPC/config/pintools_32bit.mpb:
        * oasis/probes/pintool:
        * oasis/probes/pintool/instruction_counter:
        * oasis/probes/pintool/instruction_counter/Instruction_Counter_Probe.mpc:
        * oasis/probes/pintool/instruction_counter/Instruction_Counter_Probe.pdl:
        * tests/probes/pintool:
        * tests/probes/pintool/instruction_counter:
        * tests/probes/pintool/instruction_counter/Smoke_Test:
        * tests/probes/pintool/instruction_counter/Smoke_Test/OASIS_Instruction_Counter_Probe.mpc:
        * tests/probes/pintool/instruction_counter/Smoke_Test/Smoke_Test.dac:
        * tests/probes/pintool/instruction_counter/Smoke_Test/Smoke_Test.einode:
        * tests/probes/pintool/instruction_counter/Smoke_Test/driver.cpp:
        * tests/probes/pintool/instruction_counter/Smoke_Test/run_test.pl:

          First pass at integrating pintool with OASIS.  Thanks Tanumoy
          for this starting point.

Tue Jan 15 17:28:24 UTC 2013  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websock_Acceptor.cpp:

          Fixed error with reading the client handshake challenge


Thu Dec 13 23:21:46 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/middleware/tena/bridges/Software_Probe.cpp:

          Removed the packager from the tena bridges.

Thu Dec 13 23:03:53 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * tests/tools/Command_Injector/run_test.pl:

          Fixed test so the DAC would find the TEM correctly.

Mon Dec 10 06:32:36 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/DataChannel/Data_Channel.h:
        * oasis/DataChannel/Data_Channel.inl:
        * oasis/DataChannel/Data_Channel.mpc:
        * oasis/DataChannel/Latest_Local_Data_Channel.cpp:
        * oasis/DataChannel/Software_Probe_Data_Packager.h:
        * oasis/DataChannel/Software_Probe_Data_Packager.inl:
        * oasis/DataChannel/Software_Probe_Data_Packager.cpp:
        * oasis/DataChannel/Standard_Software_Probe_Data_Packager.h:
        * oasis/DataChannel/Standard_Software_Probe_Data_Packager.inl:
        * oasis/DataChannel/Standard_Software_Probe_Data_Packager.cpp:
        * oasis/middleware/tao/Data_Channel/Tao_Software_Probe_Data_Packager.h:
        * oasis/probes/Software_Probe.mpc:
        * oasis/probes/Software_Probe_Impl.h:

          Moved the packager to the DataChannel rather than the software probe core.

        * oasis/probes/Software_Probe_Data_Packager.h:
        * oasis/probes/Software_Probe_Data_Packager.inl:
        * oasis/probes/Software_Probe_Data_Packager.cpp:
        * oasis/probes/Standard_Software_Probe_Data_Packager.h:
        * oasis/probes/Standard_Software_Probe_Data_Packager.inl:
        * oasis/probes/Standard_Software_Probe_Data_Packager.cpp:

          Removed these files.

Tue Nov 20 17:44:50 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/probes/Software_Probe_Data_Packager.h:

          Removed the data_stream getter since write_* methods are now used.
          Added data_size getter.

        * oasis/probes/Software_Probe_Impl.cpp:

          Accidentally broke datasize in the header with previous commit.

        * oasis/probes/Standard_Software_Probe_Data_Packager.h:
        * oasis/probes/Standard_Software_Probe_Data_Packager.inl:
        * oasis/probes/Standard_Software_Probe_Data_Packager.cpp:

          Removed data_stream getter.  Moved data_size getter to public scope.

Tue Nov 20 16:59:45 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * OASIS_PDL/be/cpp/Impl_Probe_Cpp_Generator_Visitor.cpp:
        * OASIS_PDL/be/cpp/Package_Data_Generator.h:
        * OASIS_PDL/be/cpp/Package_Data_Generator.cpp:

          Changed to use write_* packager methods instead of << operators.
          Structs now expose a pacakge_data method.

        * oasis/probes/Software_Probe_Data_Packager.h:
        * oasis/probes/Standard_Software_Probe_Data_Packager.cpp:

          Forgot to implement write_uint64 and write_real64.  Modified
          write_real32 implementation to use ACE Double.

Mon Nov 19 20:20:20 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/DataChannel/Data_Channel.h:
        * oasis/DataChannel/Data_Channel.inl:
        * oasis/DataChannel/Data_Channel.mpc:
        * oasis/DataChannel/Latest_Local_Data_Channel.h:
        * oasis/DataChannel/Latest_Local_Data_Channel.inl:
        * oasis/DataChannel/Latest_Local_Data_Channel.cpp:
        * oasis/DataChannel/Local_Data_Channel.h:
        * oasis/DataChannel/Local_Data_Channel.cpp:
        * oasis/EINode/LocalDataChannel_i.h:
        * oasis/EINode/LocalDataChannel_i.inl:
        * oasis/EINode/Standard_EINode.h:
        * oasis/EINode/Standard_EINode.inl:
        * oasis/EINode/Standard_EINode.cpp:
        * oasis/middleware/tao/Data_Channel/Tao_Software_Probe_Data_Packager.h:
        * oasis/probes/Software_Probe_Data_Packager.h:
        * oasis/probes/Software_Probe_Data_Packager.inl:
        * oasis/probes/Software_Probe_Impl.inl:
        * oasis/probes/Standard_Software_Probe_Data_Packager.h:
        * oasis/probes/Standard_Software_Probe_Data_Packager.inl:
        * oasis/probes/Standard_Software_Probe_Data_Packager.cpp:

          Per James' suggestions, used the Prototype pattern with the
          packagers.  Local channels now have a setter method for the packager
          which should be provided to the software probe.  Also added
          release method to packagers to delete them.

        * oasis/probes/OASIS_Software_Probe_Data_Packager.h:
        * oasis/probes/OASIS_Software_Probe_Data_Packager.inl:
        * oasis/probes/OASIS_Software_Probe_Data_Packager.cpp:

          Removed these files, renamed class to
          Standard_Software_Probe_Data_Packager.

Mon Nov 19 16:32:59 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * OASIS_PDL/be/cpp/Package_Data_Generator.cpp:

          Changed packager to be a pointer

        * oasis/DataChannel/Data_Channel.h:
        * oasis/DataChannel/Data_Channel.mpc:

          DataChannels now expose a factory method for encoding a probe's
          state as needed by the networking middleware used by the EINode.

        * oasis/DataChannel/Latest_Local_Data_Channel.h:
        * oasis/DataChannel/Latest_Local_Data_Channel.cpp:

          Modified to return an OASIS_Software_Probe_Data_Packager, which
          was the previous implementation (CDR).

        * oasis/EINode/LocalDataChannel_i.h:
        * oasis/EINode/LocalDataChannel_i.inl:
        * oasis/EINode/Standard_EINode.h:
        * oasis/EINode/Standard_EINode.inl:
        * oasis/EINode/Standard_EINode.cpp:

          Made the LocalDataChannel used by the EINode return the external
          DataChannel's packager.  Fixed bug with probe initalization.

        * oasis/middleware/tao/Data_Channel/DataChannel.mpc:
        * oasis/middleware/tao/Data_Channel/Tao_Data_Channel_Client.h:
        * oasis/middleware/tao/Data_Channel/Tao_Data_Channel_Client.cpp:
        * oasis/middleware/tao/Data_Channel/Tao_Software_Probe_Data_Packager.h:
        * oasis/middleware/tao/Data_Channel/Tao_Software_Probe_Data_Packager.inl:
        * oasis/middleware/tao/Data_Channel/Tao_Software_Probe_Data_Packager.cpp:

          The TAO implementation simply subclasses the default OASIS packager
          since TAO uses CDR for encoding.  Implemented factory method.

        * oasis/probes/OASIS_Software_Probe_Data_Packager.h:
        * oasis/probes/OASIS_Software_Probe_Data_Packager.inl:
        * oasis/probes/OASIS_Software_Probe_Data_Packager.cpp:

          Implementation of the packager for the OASIS format (header/data in
          CDR).

        * oasis/probes/Software_Probe_Data_Packager.h:
        * oasis/probes/Software_Probe_Data_Packager.inl:
        * oasis/probes/Software_Probe_Data_Packager.cpp:

          Changed to be an abstract class.

        * oasis/probes/Software_Probe_Impl.h:
        * oasis/probes/Software_Probe_Impl.inl:
        * oasis/probes/Software_Probe_Impl.cpp:

          Changed the packager to a pointer.  The packager is now constructed
          when the data channel is set on the probe.  Probes must still be
          initalized with a name prior to registering them to an EINode.

Thu Oct 18 15:32:36 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * MPC/config/oasis_dashboard_assembly.mpb:

          Forgot to add base project to repo

Wed Oct 17 18:37:33 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * utils:
        * utils/dashboard:
        * utils/dashboard/assemblies:
        * utils/dashboard/assemblies/dashboard.TestExecutionManager:
        * utils/dashboard/assemblies/dashboard.TestExecutionManager/dashboard.TestExecutionManager.mpc:
        * utils/dashboard/assemblies/dashboard.Web:
        * utils/dashboard/assemblies/dashboard.Web/Properties:
        * utils/dashboard/assemblies/dashboard.Web/Properties/AssemblyInfo.cs:
        * utils/dashboard/assemblies/dashboard.Web/dashboard:
        * utils/dashboard/assemblies/dashboard.Web/dashboard.Web.mpc:
        * utils/dashboard/assemblies/dashboard.Web/dashboard/Web:
        * utils/dashboard/assemblies/dashboard.Web/dashboard/Web/Helper_Classes:
        * utils/dashboard/assemblies/dashboard.Web/dashboard/Web/Helper_Classes/DAC.cs:
        * utils/dashboard/assemblies/dashboard.Web/dashboard/Web/Helper_Classes/Menu.cs:
        * utils/dashboard/assemblies/dashboard.Web/dashboard/Web/Helper_Classes/Probe.cs:
        * utils/dashboard/assemblies/dashboard.Web/dashboard/Web/Menu_Data.ashx.cs:
        * utils/dashboard/assemblies/dashboard.Web/dashboard/Web/Probe_Schema.ashx.cs:
        * utils/dashboard/dashboard.mwc:
        * utils/dashboard/website:
        * utils/dashboard/website/Client_Side_Scripts:
        * utils/dashboard/website/Client_Side_Scripts/Cdr_Reader.js:
        * utils/dashboard/website/Client_Side_Scripts/Cdr_Writer.js:
        * utils/dashboard/website/Client_Side_Scripts/Data_Point_Reader.js:
        * utils/dashboard/website/Client_Side_Scripts/Data_Point_Reader_Factory.js:
        * utils/dashboard/website/Client_Side_Scripts/Header.js:
        * utils/dashboard/website/Client_Side_Scripts/Probe.js:
        * utils/dashboard/website/Client_Side_Scripts/UUID.js:
        * utils/dashboard/website/Menu_Data.ashx:
        * utils/dashboard/website/OASIS_Dashboard.htm:
        * utils/dashboard/website/Probe_Schema.ashx:
        * utils/dashboard/website/Web.config:
        * utils/dashboard/website/dashboard.mpc:

          Adding the OASIS Dashboard to the repo.  This is a utility which uses HTML5
          and the WebSocket_Publisher_Service DAC handler to publish probe data to a
          web browser.  Currently, only Chrome has been tested.

Tue Oct  2 19:33:43 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * tests/probes/Software_Probe_Test.mpc:

          Fixed base project causing linker error on VS2010.

        * tests/probes/network/switch/Impl_Test/SwitchProbe.mpc:

          Fixed base project to require snmp for the test.

Mon Sep 24 19:40:24 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * docs/00 - QUICK START:

          Updated to reflect the changes to the bczar script.

Fri Aug 10 16:18:24 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/probes/network/switch/SwitchProbe_Impl.cpp:

          Fixed the factory method to support loading the probe via
          a configuration file.

Fri Aug 10 14:54:19 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * MPC/config/requires_snmp.mpb:

          Added snmp feature

        * OASIS_PDL/be/cpp/Impl_Dump_Generator.h:
        * OASIS_PDL/be/cpp/Impl_Dump_Generator.cpp:
        * OASIS_PDL/be/cpp/Stub_Dump_Generator.h:
        * OASIS_PDL/be/cpp/Stub_Dump_Generator.cpp:

          Modified to dump vector values

        * oasis/probes/Software_Probe_Impl.cpp:

          Fixed missing initalization of sequence number
          and state.

        * oasis/probes/network:
        * oasis/probes/network/switch:
        * oasis/probes/network/switch/OID.h:
        * oasis/probes/network/switch/OID.inl:
        * oasis/probes/network/switch/OID.cpp:
        * oasis/probes/network/switch/Snmp_Wrapper.h:
        * oasis/probes/network/switch/Snmp_Wrapper.inl:
        * oasis/probes/network/switch/Snmp_Wrapper.cpp:

          Basic wrapper class for using net-snmp.

        * oasis/probes/network/switch/SwitchProbe.mpc:
        * oasis/probes/network/switch/SwitchProbe.pdl:
        * oasis/probes/network/switch/SwitchProbe_Impl.h:
        * oasis/probes/network/switch/SwitchProbe_Impl.inl:
        * oasis/probes/network/switch/SwitchProbe_Impl.cpp:
        * oasis/probes/network/switch/SwitchProbe_Impl_export.h:
        * oasis/probes/network/switch/SwitchProbe_stub_export.h:

          Added switch probe.  Currently, it only works with HP
          switches.

        * tests/probes/network:
        * tests/probes/network/switch:
        * tests/probes/network/switch/Impl_Test:
        * tests/probes/network/switch/Impl_Test/SwitchProbe.mpc:
        * tests/probes/network/switch/Impl_Test/driver.cpp:

          Added basic impl test which will work with the IUPUI Emulab.

        * tests/probes/network/switch/Smoke_Test:
        * tests/probes/network/switch/Smoke_Test/Smoke_Test.dac:
        * tests/probes/network/switch/Smoke_Test/Smoke_Test.einode:
        * tests/probes/network/switch/Smoke_Test/Smoke_Test.cpp:
        * tests/probes/network/switch/Smoke_Test/SwitchProbe_Smoke_Test.mpc:
        * tests/probes/network/switch/Smoke_Test/run_test.pl:

          Added basic smoke test.

        * tests/probes/vector/vector.pdl:

          Extended to include vector of strings to validate the new
          dump generation logic.

Wed Aug  1 13:58:44 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * OASIS_PDL/be/cpp/Package_Data_Generator.h:
        * OASIS_PDL/be/cpp/Package_Data_Generator.cpp:
        * OASIS_PDL/be/cpp/Recall_Generator.h:
        * OASIS_PDL/be/cpp/Recall_Generator.cpp:

          Fixed generators to support vectors of structs

        * tests/probes/complex/complex.pdl:

          Extended pdl to test vector of structs

        * tests/probes/metadata:
        * tests/probes/metadata/driver.cpp:
        * tests/probes/metadata/mdtest.pdl:
        * tests/probes/metadata/metadata.mpc:

          Added unit test for the new metadata classes

        * tests/probes/vector/driver.cpp:

          Fixed test.

Tue Jul 31 18:24:51 UTC 2012  James H. Hill  <hillj at cs dot iupui dot edu>

        * OASIS_PDL/be/cpp/Stub_Probe_Cpp_Generator_Visitor.cpp:

          Simplied the code generation for the software probe metadata
          types by using type definitions.

Wed Jul 25 12:20:47 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * MPC/config/oasis_pdl.mpb:

          Modified to build all the files generated by oasis_pdl

        * OASIS_PDL/be/cpp/Flush_Generator.cpp:
        * OASIS_PDL/be/cpp/Impl_Attribute_Generator.h:
        * OASIS_PDL/be/cpp/Impl_Attribute_Generator.cpp:
        * OASIS_PDL/be/cpp/Impl_Dump_Generator.h:
        * OASIS_PDL/be/cpp/Impl_Dump_Generator.cpp:
        * OASIS_PDL/be/cpp/Impl_Probe_Cpp_Generator_Visitor.h:
        * OASIS_PDL/be/cpp/Impl_Probe_Cpp_Generator_Visitor.cpp:
        * OASIS_PDL/be/cpp/Impl_Var_Type_Generator.h:
        * OASIS_PDL/be/cpp/Impl_Var_Type_Generator.cpp:
        * OASIS_PDL/be/cpp/Metadata_Cpp_Generator_Visitor.h:
        * OASIS_PDL/be/cpp/Metadata_Cpp_Generator_Visitor.cpp:
        * OASIS_PDL/be/cpp/Package_Data_Generator.cpp:
        * OASIS_PDL/be/cpp/Probe_Cpp_Generator.h:
        * OASIS_PDL/be/cpp/Probe_Cpp_Generator.cpp:
        * OASIS_PDL/be/cpp/Probe_Cpp_Generator.mpc:
        * OASIS_PDL/be/cpp/Probe_Cpp_Schema_Generator.cpp:
        * OASIS_PDL/be/cpp/Recall_Generator.cpp:
        * OASIS_PDL/be/cpp/Stub_Attribute_Generator.h:
        * OASIS_PDL/be/cpp/Stub_Attribute_Generator.cpp:
        * OASIS_PDL/be/cpp/Stub_Dump_Generator.h:
        * OASIS_PDL/be/cpp/Stub_Dump_Generator.cpp:
        * OASIS_PDL/be/cpp/Stub_Probe_Cpp_Generator_Visitor.h:
        * OASIS_PDL/be/cpp/Stub_Probe_Cpp_Generator_Visitor.cpp:
        * OASIS_PDL/be/cpp/Stub_Var_Type_Generator.h:
        * OASIS_PDL/be/cpp/Stub_Var_Type_Generator.cpp:

          Split stub and impl visitors into separate classes.  Added
          metadata generator.  Stubs and impls are now put into separate
          files.  Stubs can no longer be packaged and impls can no longer
          be recalled.  Generated impl classes are now ProbeNameImpl
          instead of ProbeName_Impl.

        * etc/tena-omc/oasis_omc-v0.1.jar:
        * etc/tena-omc/src/softwareProbeBridge/softwareProbeBridge.cpp.ftl:

          Modified bridges to use the new Software_Probe_Instance datatype
          and Software_Probe_header object.

        * oasis/DataAcquisitionController/Execution_Context.cpp:
        * oasis/DataAcquisitionController/Registration_Packet.h:

          Changed Software_Probe_Instance typedef to use a hash map of
          shared pointers.

        * oasis/DataAcquisitionController/Standard_DAC_App.cpp:

          Changed TEM registration output to be INFO instead of ERROR.

        * oasis/DataAcquisitionController/handler/Json_Flatfile_Publisher/Json_Flatfile_Publisher_Service.cpp:
        * oasis/DataAcquisitionController/handler/Tao_Publisher/Tao_PublisherService_i.cpp:
        * oasis/DataAcquisitionController/handler/Tena_Publisher/Tena_Publisher_Service.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Acceptor.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Acceptor.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Handler.cpp:
        * oasis/DataAcquisitionController/handler/archive/Archive_Service.cpp:

          Modified handlers to work with the new Software_Probe_Header class.

        * oasis/EINode/Standard_EINode.cpp:

          Changed to adhere to the new probe interface.

        * oasis/middleware/tao/Data_Channel/DataChannel_i.h:
        * oasis/middleware/tao/Data_Channel/DataChannel_i.cpp:

          Added a metadata registry to the tao data channel.  If multiple
          probes of the same type are registered with the DAC, only a single
          metadata object is allocated in the Software_Probe_Instance typedef.

        * oasis/middleware/tena/bridges/MemoryProbeBridge-v1.4/src/OASIS/System/Memory/LinuxMemoryProbe_Bridge.cpp:
        * oasis/middleware/tena/bridges/MemoryProbeBridge-v1.4/src/OASIS/System/Memory/MemoryProbe_Bridge.cpp:
        * oasis/middleware/tena/bridges/MemoryProbeBridge-v1.4/src/OASIS/System/Memory/WindowsMemoryProbe_Bridge.cpp:
        * oasis/middleware/tena/bridges/NetworkProbeBridge-v1.1/src/OASIS/System/Network/LinuxNetworkProbe_Bridge.cpp:
        * oasis/middleware/tena/bridges/NetworkProbeBridge-v1.1/src/OASIS/System/Network/NetworkProbe_Bridge.cpp:
        * oasis/middleware/tena/bridges/NetworkProbeBridge-v1.1/src/OASIS/System/Network/WindowsNetworkProbe_Bridge.cpp:
        * oasis/middleware/tena/bridges/ProcessorProbeBridge-v1.0/src/OASIS/System/Processor/LinuxProcessorProbe_Bridge.cpp:
        * oasis/middleware/tena/bridges/ProcessorProbeBridge-v1.0/src/OASIS/System/Processor/ProcessorProbe_Bridge.cpp:
        * oasis/middleware/tena/bridges/ProcessorProbeBridge-v1.0/src/OASIS/System/Processor/WindowsProcessorProbe_Bridge.cpp:
        * oasis/middleware/tena/bridges/TemperatureProbeBridge-v1.2/src/OASIS/HardwareProbes/HardwareProbe_Bridge.cpp:
        * oasis/middleware/tena/bridges/TemperatureProbeBridge-v1.2/src/OASIS/HardwareProbes/TemperatureProbe_Bridge.cpp:

          Regenerated tena bridges since modifications were made to the bridge
          generator.

        * oasis/middleware/tena/bridges/Software_Probe.cpp:
        * oasis/middleware/tena/bridges/Software_Probe_Bridge.cpp:
        * oasis/middleware/tena/bridges/Software_Probe_Bridge_T.cpp:

          Changed bridge base classes to use the Software_Probe_Header.

        * oasis/probes/Software_Probe_Header.h:
        * oasis/probes/Software_Probe_Header.inl:
        * oasis/probes/Software_Probe_Header.cpp:

          Moved the Software_Probe_Header into its own file.

        * oasis/probes/Software_Probe.h:
        * oasis/probes/Software_Probe.inl:
        * oasis/probes/Software_Probe.cpp:

          Added metadata getter, dump, and header attribute getter methods.
          Recalling directly from a InputCDR is no longer public.

        * oasis/probes/Software_Probe.mpc:
        * oasis/probes/Software_Probe_Impl.h:
        * oasis/probes/Software_Probe_Impl.inl:
        * oasis/probes/Software_Probe_Impl.cpp:

          Impls no longer subclass from stubs, resulting in similar but
          separate hierarchies.  Added header attribute getters.  Modified
          init method signature.

        * oasis/probes/Software_Probe_Metadata.h:
        * oasis/probes/Software_Probe_Metadata.inl:

          Changed to only allow an initializing constructor.  Each probe
          now subclasses this.

        * oasis/probes/hardware/temperature/Analog_TemperatureProbe_Impl.h:
        * oasis/probes/hardware/temperature/Analog_TemperatureProbe_Impl.cpp:
        * oasis/probes/heartbeat/HeartbeatProbe_Impl.h:
        * oasis/probes/logging/ace/ACE_Logging_Software_Probe.h:
        * oasis/probes/system/memory/Meminfo_Parser.h:
        * oasis/probes/system/memory/Meminfo_Parser.cpp:
        * oasis/probes/system/memory/Meminfo_Parser_Grammar.h:
        * oasis/probes/system/memory/Meminfo_Parser_Grammar.cpp:
        * oasis/probes/system/memory/MemoryProbe_Impl.h:
        * oasis/probes/system/network/NetworkProbe_Impl.h:
        * oasis/probes/system/network/NetworkProbe_Impl.cpp:
        * oasis/probes/system/network/Procnetdev_Parser.h:
        * oasis/probes/system/network/Procnetdev_Parser.cpp:
        * oasis/probes/system/processor/ProcessorProbe.mpc:
        * oasis/probes/system/processor/ProcessorProbe_Impl.h:
        * oasis/probes/system/processor/Procstat_Parser.h:
        * oasis/probes/system/processor/Procstat_Parser.cpp:
        * oasis/tools/System_Probe_Daemon/System_Probe_Daemon.cpp:

          Modified the existing probes to work with the Impl/Stub changes.

        * performance-tests/tput/data_handler/Sender_App.h:
        * performance-tests/tput/data_handler/Sender_App.cpp:
        * tests/DataAcquisitionController/handlers/Tena_Publisher/FooBridge-v1.1/src/OASIS/Foo_Bridge.cpp:
        * tests/DataAcquisitionController/handlers/Tena_Publisher/Handle_Data_Test/Handle_Data_Test.mpc:
        * tests/DataAcquisitionController/handlers/Tena_Publisher/Handle_Data_Test/driver.cpp:
        * tests/DataAcquisitionController/handlers/Tena_Publisher/Handle_Registration_Test/Handle_Registration_Test.mpc:
        * tests/DataAcquisitionController/handlers/Tena_Publisher/Handle_Registration_Test/driver.cpp:
        * tests/DataAcquisitionController/handlers/archive/Smoke_Test/Smoke_Test.cpp:
        * tests/DataAcquisitionController/handlers/archive/String_Probe/String_Probe_Test.cpp:
        * tests/DataAcquisitionController/handlers/publisher/Smoke_Test/Smoke_Test_App.cpp:
        * tests/probes/complex/driver.cpp:
        * tests/probes/hardware/temperature/Impl_Test/driver.cpp:
        * tests/probes/inheritance/driver.cpp:
        * tests/probes/int16/Impl_Test/driver.cpp:
        * tests/probes/int16/Smoke_Test/Smoke_Test.mpc:
        * tests/probes/int16/Smoke_Test/Smoke_Test.cpp:
        * tests/probes/int32/Impl_Test/driver.cpp:
        * tests/probes/int32/Smoke_Test/Smoke_Test.cpp:
        * tests/probes/int32/Smoke_Test/Smoke_Test.mpc:
        * tests/probes/int64/Impl_Test/driver.cpp:
        * tests/probes/int64/Smoke_Test/Smoke_Test.mpc:
        * tests/probes/int64/Smoke_Test/Smoke_Test.cpp:
        * tests/probes/int8/Impl_Test/driver.cpp:
        * tests/probes/int8/Smoke_Test/Smoke_Test.cpp:
        * tests/probes/int8/Smoke_Test/Smoke_Test.mpc:
        * tests/probes/int8/Smoke_Test/run_test.pl:
        * tests/probes/nodata/driver.cpp:
        * tests/probes/string/driver.cpp:
        * tests/probes/system/memory/Impl_Test/driver.cpp:
        * tests/probes/system/network/Impl_Test/driver.cpp:
        * tests/probes/system/processor/Impl_Test/driver.cpp:
        * tests/probes/system/processor/Tena_Pub_Sub_Test/driver.cpp:
        * tests/probes/vector/driver.cpp:
        * tests/tools/Command_Injector/client.cpp:
        * tests/tools/System_Probe_Daemon/Tena_Test/run_test.pl:

          Modified the existing tests to work with the Impl/Stub changes.

        * OASIS_PDL/be/cpp/Attribute_Generator.h:
        * OASIS_PDL/be/cpp/Attribute_Generator.cpp:
        * OASIS_PDL/be/cpp/Dump_Generator.h:
        * OASIS_PDL/be/cpp/Dump_Generator.cpp:
        * OASIS_PDL/be/cpp/Probe_Cpp_Generator_Visitor.h:
        * OASIS_PDL/be/cpp/Probe_Cpp_Generator_Visitor.cpp:
        * OASIS_PDL/be/cpp/Var_Type_Generator.h:
        * OASIS_PDL/be/cpp/Var_Type_Generator.cpp:
        * oasis/probes/Software_Probe_Impl_T.h:
        * oasis/probes/Software_Probe_Impl_T.inl:
        * oasis/probes/Software_Probe_Impl_T.cpp:

          Removed these files.

Sat Jun 23 04:20:54 UTC 2012  Darshan Puranik  <dpuranik at iupui dot edu>

        * oasis/tools/Dashboard/Client_Side_Scripts/Cdr_Reader.js:
        * oasis/tools/Dashboard/Client_Side_Scripts/Cdr_Writer.js:
        * oasis/tools/Dashboard/Client_Side_Scripts/Data_Point_Reader.js:
        * oasis/tools/Dashboard/Client_Side_Scripts/Data_Point_Reader_Factory.js:
        * oasis/tools/Dashboard/Client_Side_Scripts/Header.js:
        * oasis/tools/Dashboard/Client_Side_Scripts/Probe.js:
        * oasis/tools/Dashboard/Client_Side_Scripts/UUID.js:
        * oasis/tools/Dashboard/Helper_Classes/DAC.cs:
        * oasis/tools/Dashboard/Helper_Classes/Menu.cs:
        * oasis/tools/Dashboard/Helper_Classes/Probe.cs:
        * oasis/tools/Dashboard/Menu_Data.ashx:
        * oasis/tools/Dashboard/Menu_Data.ashx.cs:
        * oasis/tools/Dashboard/OASIS_Dashboard.htm:
        * oasis/tools/Dashboard/Probe_Schema.ashx:
        * oasis/tools/Dashboard/Probe_Schema.ashx.cs:
        * oasis/tools/Dashboard/Properties/AssemblyInfo.cs:
        * oasis/tools/Dashboard/Web.config:

          All Web application related files added.

        * oasis/tools/Dashboard/Scripts/Data_Point_Reader.js:
        * oasis/tools/Dashboard/Scripts/Data_Point_Reader_Factory.js:
        * oasis/tools/Dashboard/Scripts/Probe.js:

          Removed these files because new version is added.

Sat Jun 23 03:58:44 UTC 2012  Darshan Puranik  <dpuranik at iupui dot edu>

        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Handler.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Handler.cpp:

          Previous code wasnt updateing rd_ptr. Fixed the bug.

        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Hertz_Command.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Registration_Command.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Unregistration_Command.cpp:

          Previously web application was sending DAC name and Probe name in concatenated string. Now they are in
          two different string along with einode name. Updated code to cope up with latest web application code.

        * tests/DataAcquisitionController/handlers/Websocket_Publisher/Smoke_Test/run_test.pl:

          Updated script for testing purposes.

Fri Jun 15 17:50:03 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/DataAcquisitionController/Instances_Table.cpp:

          Fixed query which was returning invalid results for the probe's
          type as a string.

Fri Jun  8 19:58:39 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/DataAcquisitionController/DataAcquisitionController.idl:

          Added get_schema method for getting a probe instance's schema
          using its unique identifier (instance name and einode name).

        * oasis/DataAcquisitionController/DataAcquisitionController_i.h:
        * oasis/DataAcquisitionController/DataAcquisitionController_i.cpp:
        * oasis/DataAcquisitionController/Database.h:
        * oasis/DataAcquisitionController/Database.cpp:
        * oasis/DataAcquisitionController/Metametrics_Table.h:
        * oasis/DataAcquisitionController/Metametrics_Table.cpp:

          Implemented get_schema.

        * tests/TestExecutionManager/Smoke_Test/Smoke_Test_App.cpp:

          Extended test to use get_schema.

Fri Jun  8 19:21:38 UTC 2012  Darshan Puranik  <dpuranik at iupui dot edu>

        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Handler.cpp:

          fixed a typo.

Fri Jun  8 18:17:31 UTC 2012  Darshan Puranik  <dpuranik at iupui dot edu>

        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Handler.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Registration_Command.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Unregistration_Command.cpp:

          probe registration and unregistration mechanism for client is in place.

Fri Jun  8 17:53:05 UTC 2012  Darshan Puranik  <dpuranik at iupui dot edu>

        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Acceptor.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Acceptor.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Handler.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Handler.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Publisher_Service.cpp:

          Made changes in Handle_Data method. I was extractig data out of packet and sending that data
          client handler. Now I send Data_Packet till the client handler.

Fri Jun  8 15:14:00 UTC 2012  Darshan Puranik  <dpuranik at iupui dot edu>

        * oasis/probes/Software_Probe_Data_Packager.cpp:

          Fixed packaging logic when fixed cdr sizes are not used.

Fri Jun  8 06:42:16 UTC 2012  Darshan Puranik  <dpuranik at iupui dot edu>

        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Handler.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Handler.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Registration_Command.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Unregistration_Command.cpp:

          Added code to handle subscription mechanism which keep track of probes requested by client.

Fri Jun  8 05:32:13 UTC 2012  Darshan Puranik  <dpuranik at iupui dot edu>


        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Command_Manager.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Command_Manager.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Handle_Hertz_Command.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Handle_Hertz_Command.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Handle_Registration_Command.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Handle_Registration_Command.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Handle_Schema_Command.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Handle_Schema_Command.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Handle_Unregistration_Command.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Handle_Unregistration_Command.cpp:

          Removed these files because they were out dated. I added new files for that.

Fri Jun  8 05:14:18 UTC 2012  Darshan Puranik  <dpuranik at iupui dot edu>

        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Acceptor.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Handler.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Handler.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Command.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Command_Factory.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Command_Factory.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Hertz_Command.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Hertz_Command.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Publisher_Service.mpc:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Registration_Command.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Registration_Command.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Send_Schema_Command.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Send_Schema_Command.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Unregistration_Command.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Unregistration_Command.cpp:

          Added proper structure to handle commands comming from web client.

        * tests/DataAcquisitionController/handlers/Websocket_Publisher/Smoke_Test/run_test.pl:

          updated the script for new testing purposes.

Wed Jun  6 15:43:43 UTC 2012  Darshan Puranik  <dpuranik at iupui dot edu>

        * oasis/tools/Dashboard/Scripts/Data_Point_Reader.js:
        * oasis/tools/Dashboard/Scripts/Data_Point_Reader_Factory.js:
        * oasis/tools/Dashboard/Scripts/Probe.js:

          Added two scripts realated to populating probe table.

Tue Jun  5 22:56:31 UTC 2012  Darshan Puranik  <dpuranik at iupui dot edu>

        * oasis/tools/Dashboard/Scripts/Probe.js:

          Added script which traverse probe schema and build table for that probe.
          I am still working on this script. It will be really difficult to write this
          script again so i wanted it in repo.

Mon Jun  4 20:09:31 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/DataAcquisitionController/DataAcquisitionController.idl:
        * oasis/DataAcquisitionController/DataAcquisitionController_i.h:
        * oasis/DataAcquisitionController/DataAcquisitionController_i.cpp:

          Changed object names in the IDL.  Extended attributes
          which are available for getting the probe instances.

        * oasis/DataAcquisitionController/Database.h:
        * oasis/DataAcquisitionController/Database.cpp:
        * oasis/DataAcquisitionController/Instances_Table.h:
        * oasis/DataAcquisitionController/Instances_Table.cpp:

          Renamed methods and changed to use the Software_Probe_Instance.

        * oasis/probes/Software_Probe.mpc:
        * oasis/probes/Software_Probe_Instance.h:
        * oasis/probes/Software_Probe_Instance.inl:
        * oasis/probes/Software_Probe_Instance.cpp:

          Implemented class to represent the information necessary
          to uniquely identify a software probe instance.

        * tests/TestExecutionManager/Smoke_Test/Smoke_Test_App.cpp:

          Updated test to use new IDL names appropriately.

Mon Jun  4 16:28:57 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/DataAcquisitionController/DataAcquisitionController_i.cpp:

          Fixed implementation of get_probe_ids.  Thanks James!

Mon Jun  4 15:02:54 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Command_Manager.h:

          Fixed compilation error

Sat Jun  2 19:04:58 UTC 2012  Darshan Puranik  <dpuranik at iupui dot edu>

        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Handler.cpp:

          Clean the code to cope up with new changes.

        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Publisher_Service.mpc:

          Updated mpc file to add new files.

Sat Jun  2 16:57:03 UTC 2012  Darshan Puranik  <dpuranik at iupui dot edu>

        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Handler.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Client_Handler.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Command_Manager.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Command_Manager.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Handle_Hertz_Command.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Handle_Hertz_Command.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Handle_Registration_Command.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Handle_Registration_Command.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Handle_Schema_Command.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Handle_Schema_Command.cpp:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Handle_Unregistration_Command.h:
        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websocket_Handle_Unregistration_Command.cpp:

          Added support to handle different commands from web browser in efficient manner

Sat Jun  2 15:01:02 UTC 2012  Darshan Puranik  <dpuranik at iupui dot edu>

        * oasis/DataAcquisitionController/handler/Websocket_Publisher/Websock_Svc_Handler.cpp:

          Added some comments to clarify coding.

        * tests/DataAcquisitionController/handlers/Websocket_Publisher/Smoke_Test/Smoke_Test.conf:
        * tests/DataAcquisitionController/handlers/Websocket_Publisher/Smoke_Test/Smoke_Test.einode:
        * tests/DataAcquisitionController/handlers/Websocket_Publisher/Smoke_Test/run_test.pl:

          Added some code to test new AJAX behavior.

Fri Jun  1 19:10:21 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/DataAcquisitionController/DataAcquisitionController.idl:
        * oasis/DataAcquisitionController/DataAcquisitionController_i.h:
        * oasis/DataAcquisitionController/DataAcquisitionController_i.cpp:

          Added basic functionality to get the probes (name and uuid)
          registered with a DAC via CORBA

        * oasis/DataAcquisitionController/Database.h:
        * oasis/DataAcquisitionController/Database.cpp:
        * oasis/DataAcquisitionController/Instances_Table.h:
        * oasis/DataAcquisitionController/Instances_Table.cpp:

          Implemented sql query to get the probe's information

        * tests/TestExecutionManager/Smoke_Test/Smoke_Test_App.cpp:

          Added debug output to show the number of probes.

Thu May 31 18:12:23 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/TestExecutionManager/TestExecutionManager.idl:
        * oasis/TestExecutionManager/TestExecutionManager_i.cpp:

          Removed unused exception, implemented other exceptions.

        * tests/TestExecutionManager/Smoke_Test/Smoke_Test_App.h:
        * tests/TestExecutionManager/Smoke_Test/Smoke_Test_App.cpp:
        * tests/TestExecutionManager/Smoke_Test/run_test.pl:

          Modified test to accept a command line argument for the
          number of DACs which should be found via the TEM.

Thu May 31 14:47:49 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/DataAcquisitionController/Standard_DAC_App.cpp:

          Added exception handling so the TEM is not required
          when running the DAC.

Thu May 31 14:20:05 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/DataAcquisitionController/Standard_DAC_App.h:
        * oasis/DataAcquisitionController/Standard_DAC_App.cpp:
        * oasis/DataAcquisitionController/feature_specific.mpb:

          Added in the registration and unregistration process

        * oasis/TestExecutionManager/TestExecutionManager.idl:
        * oasis/TestExecutionManager/TestExecutionManager_i.h:
        * oasis/TestExecutionManager/TestExecutionManager_i.cpp:

          Implemented registration and unregistration, added
          in exceptions

        * tests/TestExecutionManager/Smoke_Test/Smoke_Test_App.cpp:
        * tests/TestExecutionManager/Smoke_Test/run_test.pl:

          Modified to test the registration and unregistration
          process

        * tests/TestExecutionManager/Smoke_Test/the_DACS.dat:

          Removed this file.

Wed May 30 17:26:45 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/TestExecutionManager/Manager_App.h:
        * oasis/TestExecutionManager/Manager_App.cpp:
        * oasis/TestExecutionManager/TestExecutionManager.idl:
        * oasis/TestExecutionManager/TestExecutionManager_i.h:
        * oasis/TestExecutionManager/TestExecutionManager_i.cpp:

          Restructured the TEM to allow for dynamic registration and
          unregistration of DACs.

        * tests/TestExecutionManager/Smoke_Test/run_test.pl:

          Changed the test to work with the new TEM test.

Mon May 21 18:14:39 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * performance-tests/tput/data_handler/results/Emulab/Pay_Per_Use/Pay_Per_Use.xlsx:

          Compiled performance metrics for the Pay-Per-Use pattern.

Mon May 21 17:47:12 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * performance-tests/tput/data_handler/results/Emulab/Pay_Per_Use:
        * performance-tests/tput/data_handler/results/Emulab/Pay_Per_Use/set_0.csv:
        * performance-tests/tput/data_handler/results/Emulab/Pay_Per_Use/set_1.csv:
        * performance-tests/tput/data_handler/results/Emulab/Pay_Per_Use/set_2.csv:
        * performance-tests/tput/data_handler/results/Emulab/Pay_Per_Use/set_3.csv:
        * performance-tests/tput/data_handler/results/Emulab/Pay_Per_Use/set_4.csv:

          Generated performance metrics for the Pay-Per-Use pattern.

Fri May 18 19:50:53 UTC 2012  Dennis Feiock  <dfeiock at iupui dot edu>

        * oasis/probes/Software_Probe_Data_Packager.h:
        * oasis/probes/Software_Probe_Data_Packager.inl:
        * oasis/probes/Software_Probe_Data_Packager.cpp:

          Added an optional argument for init to set the
          size of the stream during initalization.  This is
          necessary to get placeholders working.

        * oasis/probes/Software_Probe_Impl.h:
        * oasis/probes/Software_Probe_Impl.cpp:

          Added protected variable to define the fixed
          size of the data for packaging.

        * tests/probes/system/memory/Impl_Test/driver.cpp:
        * tests/probes/system/processor/Impl_Test/driver.cpp:

          Fixed tests to initalize the probes properly.

Thu May 17 14:59:39 UTC 2012  James H. Hill  <hillj at cs dot iupui dot edu>

        * ChangeLog:
        * ChangeLogs/ChangeLog-0.3:

          Start of OASIS version 0.4
